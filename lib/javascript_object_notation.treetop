grammar JavaScriptObjectNotation
  rule maybe_a_hash
    hash
    /
    nothing
  end

  rule hash
    "{" blank element:hash_elements? blank "}" {
      def to_hash
        element.to_hash
      end
    }
  end

  rule hash_elements
    first:hash_element rest:(blank "," blank next:hash_element)* {
      def to_hash
        first.to_hash.merge(rest.elements.inject({}){ |result, element| result = result.merge(element.next.to_hash) })
      end
    }
  end

  rule hash_element
    key:string_or_integer blank ':' blank value:string_or_integer {
      def to_hash
        { key.to_hash => value.to_hash }
      end
    }
  end

  rule string_or_integer
    string
    /
    integer
  end

  rule string
    '"' value:[a-z0-9_A-Z]+ '"' {
      def to_hash
        value.text_value
      end
    }
  end

  rule integer
    minus:[-]? number:[0-9]+ {
        def to_hash
          if minus.text_value == '-'
              0 - number.text_value.to_i
          else
              number.text_value.to_i
          end
        end
    }
  end

  rule nothing
    "" {
      def to_hash
        :nothing
      end
    }
  end

  rule blank
    " "*
  end
end
